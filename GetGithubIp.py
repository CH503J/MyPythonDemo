import socket
import os

# 定义 GitHub 的常见域名
github_domains = [
    "github.com",
    "api.github.com",
    "raw.githubusercontent.com",
    "codeload.github.com",
]


# 获取域名对应的 IP 地址
def get_ips_for_domains(domains):
    domain_ip_map = {}
    for domain in domains:
        try:
            ips = socket.gethostbyname_ex(domain)[2]  # 获取所有解析的 IP
            domain_ip_map[domain] = ips
        except Exception as e:
            print(f"无法解析 {domain} 的 IP 地址: {e}")
    return domain_ip_map


# 更新 Windows hosts 文件
def update_hosts_file(domain_ip_map):
    hosts_path = r"C:\Windows\System32\drivers\etc\hosts"

    # 检查是否有管理员权限
    if not os.access(hosts_path, os.W_OK):
        print("需要管理员权限才能修改 hosts 文件！请以管理员身份运行此脚本。")
        return

    try:
        # 读取现有 hosts 文件内容
        with open(hosts_path, "r", encoding="utf-8") as file:
            hosts_content = file.readlines()

        # 备份原始 hosts 文件
        with open(f"{hosts_path}.bak", "w", encoding="utf-8") as backup:
            backup.writelines(hosts_content)

        # 移除旧的 GitHub 条目
        new_hosts_content = [line for line in hosts_content if
                             not any(domain in line for domain in domain_ip_map.keys())]

        # 添加新的 IP 映射
        new_hosts_content.append("\n# GitHub IP mappings (generated by script)\n")
        for domain, ips in domain_ip_map.items():
            for ip in ips:
                new_hosts_content.append(f"{ip} {domain}\n")

        # 写回 hosts 文件
        with open(hosts_path, "w", encoding="utf-8") as file:
            file.writelines(new_hosts_content)

        print(f"成功更新了 hosts 文件！已添加以下条目：")
        for domain, ips in domain_ip_map.items():
            for ip in ips:
                print(f"{ip} {domain}")

    except Exception as e:
        print(f"更新 hosts 文件时出错: {e}")


# 主函数
if __name__ == "__main__":
    print("正在获取 GitHub 域名的 IP 地址...")
    domain_ip_map = get_ips_for_domains(github_domains)

    if domain_ip_map:
        print("已获取以下域名的 IP 地址：")
        for domain, ips in domain_ip_map.items():
            print(f"{domain}: {', '.join(ips)}")

        print("\n即将更新 hosts 文件...")
        update_hosts_file(domain_ip_map)
    else:
        print("未能获取任何 GitHub 域名的 IP 地址，无法更新 hosts 文件。")
